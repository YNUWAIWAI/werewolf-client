/* stylelint-disable selector-max-universal */
* {
  margin: 0;
  padding: 0;
}
/* stylelint-enable selector-max-universal */
:root {
  --info-image-size: 6vh;
  --prediction-image-size: 40px;
  --result-image-size: 40px;
  /* 100vw * (2/5) * (1/4) - 2 */
  --chat-image-size: 6vw;
  --arrow: 2vw;
  --public-color: rgba(255, 165, 0, 0.4);
  --private-color: rgba(128, 128, 128, 0.3);
  --limited-color: rgba(255, 0, 0, 0.4);
  --master-color: rgba(0, 255, 0, 0.4);
  --grave-color: rgba(0, 0, 255, 0.3);
  --win-color: hsla(51, 100%, 50%, 0.7);
  --dead-color: red;
}

body {
  @import url('https://fonts.googleapis.com/earlyaccess/notosansjapanese.css');
  font-family: 'Noto Sans Japanese', 'ＭＳ ゴシック', 'Osaka-Mono', 'monospace', 'sans-serif';
}

.hidden {
  display: none;
  visibility: hidden;
}

.info-container {
  display: flex;
  height: 10vh;
  margin-bottom: 5vh;
}

.day {
  flex: 2;
  display: flex;
  justify-content: center;
  align-items: center;

  &--text {
    width: 70%;
    height: 60%;
    border: 2px solid black;
    border-radius: 5em;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5em;

    & > span {
      margin: 0 1em;
      width: 5em;
      text-align: center;
    }
  }
}

.role {
  flex: 3;
  display: flex;
  justify-content: center;
  align-items: center;

  &--text {
    width: 60%;
    height: 60%;
    border: 2px solid black;
    border-radius: 5em;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    font-size: 1.5em;

    & > span {
      &::before {
        content: '【';
      }

      &::after {
        content: '】';
      }
    }
  }

  &--icon {
    height: 80%;
    position: relative;
    width: var(--info-image-size);
    margin-right: 1em;

    & > img {
      position: absolute;
      height: var(--info-image-size);
      width: var(--info-image-size);
    }

    & > span {
      font-size: xx-small;
      position: absolute;
      text-align: center;
      top: var(--info-image-size);
      width: 100%;
    }
  }
}

.activity-container {
  display: flex;
  height: 60vh;
  justify-content: space-around;
}

.chat {
  width: 48vw;
  overflow: scroll;

  &--item {
    display: grid;
    grid-template-areas: 'me text opp';
    grid-template-columns: 1fr 4fr 1fr;
    min-height: calc(var(--chat-image-size) + 1em);
    margin-top: 1em;

    &:first-child {
      margin-top: 0;
    }
  }

  &--arrow-box {
    background: var(--public-color);
    grid-area: text;
    position: relative;
    border-radius: 5px;
    display: grid;
    grid-template-areas: "num text"
                         "num date";

    &::after {
      left: 100%;
      top: calc(var(--chat-image-size) / 2);
      border: solid transparent;
      content: '';
      height: 0;
      width: 0;
      position: absolute;
      pointer-events: none;
      border-left-color: var(--public-color);
      border-width: var(--arrow);
      margin-top: calc(var(--arrow) * -1);
    }
  }

  &--num {
    grid-area: num;
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 1.5em;
    word-break: break-all;
    padding: 0 0.5em;
  }

  &--text {
    grid-area: text;
    padding: 1em 1em 1em 0;
    word-break: break-all;
  }

  &--date {
    grid-area: date;
    padding: 0 1em 1em 0;
    text-align: right;
  }

  &--icon {
    display: block;
    grid-area: opp;
    position: relative;
    margin: 0 0 0 var(--arrow);

    & > img {
      position: absolute;
      top: 0;
      right: 0;
      width: var(--chat-image-size);
      height: var(--chat-image-size);
    }

    & > span {
      position: absolute;
      top: var(--chat-image-size);
      width: 100%;
      text-align: center;
      font-size: x-small;
      word-break: keep-all;
      overflow: scroll;
    }
  }

  &--item.private {
    & > .chat--arrow-box {
      background: var(--private-color);

      &::after {
        border-left-color: var(--private-color);
      }
    }
  }

  &--item.limited {
    & > .chat--arrow-box {
      background: var(--limited-color);

      &::after {
        border-left-color: var(--limited-color);
      }
    }
  }

  &--item.master {
    & > .chat--arrow-box {
      background: var(--master-color);

      &::after {
        border-left-color: var(--master-color);
      }
    }
  }

  &--item.grave {
    & > .chat--arrow-box {
      background: var(--grave-color);

      &::after {
        border-left-color: var(--grave-color);
      }
    }
  }

  &--item.me {
    & > .chat--arrow-box::after {
      left: unset;
      right: 100%;
      border-color: transparent;
      border-right-color: var(--public-color);
    }

    &.private > .chat--arrow-box::after {
      border-right-color: var(--private-color);
    }

    &.limited > .chat--arrow-box::after {
      border-right-color: var(--limited-color);
    }

    &.master > .chat--arrow-box::after {
      border-right-color: var(--master-color);
    }

    &.grave > .chat--arrow-box::after {
      border-right-color: var(--grave-color);
    }

    & > .chat--icon {
      grid-area: me;
      margin: 0 var(--arrow) 0 0;

      & > img {
        left: 0;
        right: unset;
      }
    }
  }
}

.prediction {
  width: 48vw;
  display: grid;
  height: 100%;
  grid: repeat(6, 1fr) / repeat(7, 1fr);
  border: 1px solid black;
  border-radius: 3px;
  overflow: scroll;

  & > div {
    border: solid 1px black;
    box-sizing: border-box;
    display: inline-flex;
    font-size: 1.5em;
    justify-content: center;
    align-items: center;
  }

  &--player {
    flex-direction: column;

    &.dead {
      background-color: red;
      color: white;
    }

    & > img {
      width: var(--prediction-image-size);
      height: var(--prediction-image-size);
    }

    & > span {
      font-size: xx-small;
    }
  }

  & > div[ data-state = 'o' ] {
    background: no-repeat center / 80% 80% url('img/circle.svg');
  }

  & > div[ data-state = 'unk' ] {
    background: no-repeat center / 100% 100% url('img/question.svg');
  }

  & > div[ data-state = 'tri' ] {
    background: no-repeat center / 100% 100% url('img/triangle.svg');
  }

  & > div[ data-state = 'x' ] {
    background: no-repeat center / 80% 80% url('img/cross.svg');
  }

  & > div[ data-state = 'fill' ] {
    background: black;

    &::after {
      content: attr(data-date);
      color: white;
    }
  }

  & > div[ data-state = 'fix' ] {
    background: no-repeat center / 80% 80% url('img/circle.svg');
    border: solid 3px red;
  }

  & > div[ data-role ][ data-tooltip ] {
    position: relative;

    &:hover::after {
      background: white;
      border: solid 1px black;
      content: attr(data-tooltip);
      font-size: small;
      position: absolute;
      top: 15%;
      bottom: 10%;
      left: 10%;
      right: 15%;
      display: inline-flex;
      justify-content: center;
      align-items: center;
    }
  }
}

.command {
  height: 20vh;
  display: flex;
  justify-content: space-around;
  margin: 2.5vh 0;

  &--input {
    width: 30vw;
    height: 100%;
    position: relative;

    & textarea {
      position: absolute;
      width: 100%;
      max-width: 100%;
      min-width: 100%;
      max-height: 70%;
      height: 70%;
      resize: none;
      box-sizing: border-box;
      padding: 1em;
      border-radius: 10px;
      background: var(--public-color);
    }

    & button {
      position: absolute;
      right: 0;
      top: 70%;
      width: 20%;
      height: 25%;
      margin: 10px;
      border: none;
      border-radius: 5px;
      background-color: rgb(128, 216, 255);
      box-shadow: 0 1px 1px 0;

      &:hover {
        border: 1px solid white;
      }

      &:active {
        background-color: rgb(92, 155, 183);
      }
    }

    &.private > textarea {
      background: var(--private-color);
    }

    &.limited > textarea {
      background: var(--limited-color);
    }
  }

  &--select {
    height: 100%;
    width: 100%;
    line-height: 1.5;
  }

  &--description {
    padding: 0 1em;
    font-size: 1.5em;
  }

  &--option-container {
    display: flex;
    height: calc(100% - 2.25em);
    overflow: scroll;
  }

  &--option {
    height: 100%;
    display: inline-flex;
    justify-content: center;
    align-items: center;
    flex-flow: column nowrap;

    & > img {
      height: calc(20vh - 3.75em);
      width: calc(20vh - 3.75em);
    }

    & > span {
      font-size: xx-small;
    }
  }
}

.modal {
  position: fixed;
  width: 40vw;
  height: 30vh;
  top: 35vh;
  left: 30vw;
  background: white;
  padding: 1em;
  z-index: 2;

  &--icon {
    display: inline-flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    width: 100%;

    & > img {
      height: calc(20vh - 3.75em);
      width: calc(20vh - 3.75em);
    }

    & > span {
      font-size: xx-small;
    }
  }

  &--description {
    text-align: center;
    font-size: 1.5em;
    margin-bottom: 1em;
  }

  &--button--container {
    display: inline-flex;
    width: 100%;
    justify-content: space-around;
  }

  &--button {
    font-size: 1.5em;
    width: 30%;
    border: none;
  }

  &--button[ value = 'yes' ] {
    background: rgba(255, 0, 0, 0.5);
  }

  &--button[ value = 'no' ] {
    background: rgba(0, 0, 255, 0.5);
  }
}

.result {
  height: 80vh;
  width: 80vw;
  position: fixed;
  top: 10vh;
  left: 10vw;
  background: white;
  display: grid;
  grid-template-columns: calc(var(--result-image-size) + 1rem) 2fr 2fr 1fr calc(var(--result-image-size) + 1rem) calc(var(--result-image-size) + 1rem) 2fr;
  border: 1px solid black;
  overflow: scroll;

  &--cell {
    border: 1px solid black;
    font-size: 2em;
    line-height: 1.5;
    padding: 0.5rem;
    max-height: 3rem;
    text-align: center;
    height: 100%;
    overflow: scroll;

    &[ data-result = 'image' ],
    &[ data-result = 'roleImage' ],
    &[ data-result = 'userAvatar' ] {
      display: inline-flex;
      align-items: center;
    }

    &[ data-result = 'roleImage' ][ data-tooltip ] {
      position: relative;

      &:hover::after {
        background: white;
        border: solid 1px black;
        content: attr(data-tooltip);
        font-size: 10px;
        position: absolute;
        top: 15%;
        bottom: 15%;
        left: 10%;
        right: 10%;
        display: inline-flex;
        justify-content: center;
        align-items: center;
      }
    }


    &.dead {
      color: var(--dead-color);
    }

    &.win {
      background: var(--win-color);
    }
  }
}

.obfucator {
  background: rgba(0, 0, 0, 0.5);
  position: fixed;
  height: 100vh;
  width: 100vw;
  top: 0;
  left: 0;
  z-index: 1;
}
