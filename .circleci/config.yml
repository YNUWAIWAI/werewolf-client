version: 2
jobs:
  build:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run:
          command: |
            mkdir -p ../public/stylesheets
            mkdir -p ../public/javascripts
            mkdir -p ../app/views
            yarn build:development
            node tools/build.js

  unit-test:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test:ci
      - run: yarn coverage

  visual-test:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn test:integration
      - store_artifacts:
          path: integration/landing/__image_snapshots__
          destination: landing
      - store_artifacts:
          path: integration/lobby/__image_snapshots__
          destination: lobby
      - store_artifacts:
          path: integration/village/__image_snapshots__
          destination: village

  deploy-storybook:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - run:
          name: Intall Crowdin
          command: |
            sudo apt-get install default-jre
            wget https://artifacts.crowdin.com/repo/deb/crowdin.deb -O crowdin.deb
            sudo dpkg -i crowdin.deb

      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: crowdin lint
      - restore_cache:
          keys:
            - v1-translations-{{ checksum "src/i18n/landing/en.json" }}-{{ checksum "src/i18n/lobby/en.json" }}-{{ checksum "src/i18n/village/en.json" }}
            - v1-translations-
      - run: crowdin download -b client
      - save_cache:
          paths:
            - src/i18n/landing
            - src/i18n/lobby
            - src/i18n/village
          key: v1-translations-{{ checksum "src/i18n/landing/en.json" }}-{{ checksum "src/i18n/lobby/en.json" }}-{{ checksum "src/i18n/village/en.json" }}
      - run: yarn deploy-storybook --ci

  eslint:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn eslint

  stylelint:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "package.json" }}
            - v1-dependencies-
      - run: yarn install
      - save_cache:
          paths:
            - node_modules
          key: v1-dependencies-{{ checksum "package.json" }}
      - run: yarn stylelint

  update-translations:
    docker:
      - image: circleci/node:12-browsers
        environment:
          TZ: Asia/Tokyo
    steps:
      - checkout
      - run:
          name: Upload the source of translation
          command: |
            sudo apt-get update
            sudo apt-get install default-jre
            sudo wget https://artifacts.crowdin.com/repo/deb/crowdin3.deb -O crowdin.deb
            sudo dpkg -i crowdin.deb
            java -version
            crowdin upload sources --auto-update -b client --dryrun


workflows:
  version: 2
  test_accept_deploy:
    jobs:
      - build
      - unit-test
      # - visual-test
      - deploy-storybook:
          requires:
            - build
            - unit-test
            # - visual-test
  lint:
    jobs:
      - eslint
      - stylelint

  i18n:
    jobs:
      - update-translations:
          filters:
            branches:
              only: i18n
